name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.6
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.6'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get version from tag
        id: get_version
        run: |
          $VERSION = "${{ github.ref_name }}"
          $VERSION = $VERSION -replace "^v", ""
          echo "version=$VERSION" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Update version info
        run: |
          $VERSION = "${{ steps.get_version.outputs.version }}"
          $CONTENT = Get-Content -Path spec/version_info.txt -Raw
          $CONTENT = $CONTENT -replace "filevers=\(\d+, \d+, \d+, \d+\)", "filevers=($($VERSION.Split('.') -join ', '), 0)"
          $CONTENT = $CONTENT -replace "prodvers=\(\d+, \d+, \d+, \d+\)", "prodvers=($($VERSION.Split('.') -join ', '), 0)"
          $CONTENT = $CONTENT -replace "u'FileVersion', u'\d+\.\d+\.\d+'", "u'FileVersion', u'$VERSION'"
          $CONTENT = $CONTENT -replace "u'ProductVersion', u'\d+\.\d+\.\d+'", "u'ProductVersion', u'$VERSION'"
          $CONTENT | Set-Content -Path version_info.txt
        shell: pwsh

      - name: Build application
        run: |
          python build.py build

      - name: Build installer
        run: |
          python build.py installer

      - name: Create release package
        run: |
          python build.py package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            dist/VLC Discord Presence.exe
            dist/VLC Discord RP Setup.exe
            VLC_Discord_RP.zip

      - name: Read Changelog
        id: changelog
        run: |
          $CHANGELOG = Get-Content -Path CHANGELOG.md -Raw
          $CHANGELOG = $CHANGELOG -replace '##\s*\[\d+\.\d+\.\d+\]', '##'
          $RELEVANT = ([regex]::Match($CHANGELOG, '##[^#]+').Value)
          $FORMATTED = $RELEVANT -replace '\n', '%0A'
          echo "text=$FORMATTED" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: VLC Discord Rich Presence ${{ steps.get_version.outputs.version }}
          body: |
            # VLC Discord Rich Presence ${{ steps.get_version.outputs.version }}

            ${{ steps.changelog.outputs.text }}

            ## Installation
            Download and run the installer (`VLC Discord RP Setup.exe`), or use the standalone application.
          files: |
            dist/VLC Discord RP Setup.exe
            VLC_Discord_RP.zip
          draft: false
          prerelease: false